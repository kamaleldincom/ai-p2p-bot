<!-- Admin Users Management Page -->

<div class="mb-3">
  <a href="/settings" class="btn btn-outline-secondary">
    <i class="bi bi-arrow-left"></i> Back to Settings
  </a>
</div>

<div class="alert alert-warning">
  <i class="bi bi-shield-exclamation"></i>
  <strong>Security Warning:</strong> Admin users have full access to manage transactions, users, and system settings. Only create accounts for trusted individuals.
</div>

<div class="row">
  <div class="col-md-8">
    <div class="card">
      <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Admin Users</h5>
        <button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#addAdminModal">
          <i class="bi bi-plus-circle"></i> Add Admin User
        </button>
      </div>
      <div class="card-body">
        <div class="table-responsive">
          <table class="table table-striped">
            <thead>
              <tr>
                <th>Username</th>
                <th>Role</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <% adminUsers.forEach(admin => { %>
                <tr data-username="<%= admin.username %>">
                  <td><%= admin.username %></td>
                  <td>
                    <span class="badge bg-<%= admin.role === 'superadmin' ? 'danger' : 'primary' %>">
                      <%= admin.role %>
                    </span>
                  </td>
                  <td>
                    <% if (user.username !== admin.username) { %>
                      <button class="btn btn-sm btn-outline-danger delete-admin-btn" data-username="<%= admin.username %>">
                        <i class="bi bi-trash"></i> Delete
                      </button>
                    <% } else { %>
                      <span class="text-muted">
                        <i class="bi bi-person-check"></i> Current User
                      </span>
                    <% } %>
                  </td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
  
  <div class="col-md-4">
    <div class="card">
      <div class="card-header">
        <h5 class="mb-0">Admin Roles</h5>
      </div>
      <div class="card-body">
        <div class="mb-3">
          <h6 class="text-danger">Super Admin</h6>
          <p>Has full access to all system functions including:</p>
          <ul>
            <li>Manage admin users</li>
            <li>Configure system settings</li>
            <li>Manage all transactions and users</li>
            <li>Access all reports and analytics</li>
          </ul>
        </div>
        
        <div>
          <h6 class="text-primary">Admin</h6>
          <p>Has access to most system functions excluding:</p>
          <ul>
            <li>Cannot manage other admin users</li>
            <li>Cannot modify core system settings</li>
            <li>Has read/write access to transactions and users</li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Add Admin Modal -->
<div class="modal fade" id="addAdminModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Add Admin User</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="addAdminForm">
          <div class="mb-3">
            <label for="username" class="form-label">Username</label>
            <input type="text" class="form-control" id="username" name="username" required>
          </div>
          <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <input type="password" class="form-control" id="password" name="password" required>
            <div class="form-text">Password should be strong with at least 8 characters</div>
          </div>
          <div class="mb-3">
            <label for="role" class="form-label">Role</label>
            <select class="form-select" id="role" name="role" required>
              <option value="admin">Admin</option>
              <option value="superadmin">Super Admin</option>
            </select>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" id="addAdminBtn" class="btn btn-primary">Add Admin</button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Add admin user
    document.getElementById('addAdminBtn').addEventListener('click', async function() {
      const form = document.getElementById('addAdminForm');
      const formData = new FormData(form);
      
      const username = formData.get('username');
      const password = formData.get('password');
      const role = formData.get('role');
      
      // Validate
      if (!username || !password || !role) {
        alert('All fields are required');
        return;
      }
      
      if (password.length < 8) {
        alert('Password should be at least 8 characters long');
        return;
      }
      
      // Submit form
      try {
        const response = await fetch('/settings/admins', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            username,
            password,
            role
          })
        });
        
        const result = await response.json();
        
        if (result.success) {
          alert('Admin user added successfully');
          location.reload();
        } else {
          alert(`Error: ${result.message}`);
        }
      } catch (error) {
        alert('Error adding admin user');
        console.error(error);
      }
    });
    
    // Delete admin user
    document.querySelectorAll('.delete-admin-btn').forEach(btn => {
      btn.addEventListener('click', async function() {
        const username = this.getAttribute('data-username');
        
        if (!confirm(`Are you sure you want to delete admin user "${username}"?`)) {
          return;
        }
        
        try {
          const response = await fetch(`/settings/admins/${username}`, {
            method: 'DELETE'
          });
          
          const result = await response.json();
          
          if (result.success) {
            alert('Admin user deleted successfully');
            location.reload();
          } else {
            alert(`Error: ${result.message}`);
          }
        } catch (error) {
          alert('Error deleting admin user');
          console.error(error);
        }
      });
    });
  });
</script>